apiVersion: apps/v1
kind: Deployment
metadata:
  name: debezium-connect
  namespace: kafka-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: debezium-connect
  template:
    metadata:
      labels:
        app: debezium-connect
    spec:
      containers:
        - name: connect
          image: quay.io/debezium/connect:2.5
          ports:
            - containerPort: 8083
          env:
            - name: BOOTSTRAP_SERVERS
              value: "kafka-cluster-kafka-bootstrap:9092"
            - name: GROUP_ID
              value: "debezium-connect-cluster"
            - name: CONFIG_STORAGE_TOPIC
              value: "debezium-connect-configs"
            - name: OFFSET_STORAGE_TOPIC
              value: "debezium-connect-offsets"
            - name: STATUS_STORAGE_TOPIC
              value: "debezium-connect-status"
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: kafka-connect-user-secrets
                  key: AXIOMATIKA_DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kafka-connect-user-secrets
                  key: AXIOMATIKA_DB_PASSWORD
          resources:
            limits:
              memory: "2Gi"
              cpu: "500m"
            requests:
              memory: "512Mi"
              cpu: "100m"
          readinessProbe:
            httpGet:
              path: /
              port: 8083
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8083
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: debezium-connect
  namespace: kafka-system
spec:
  selector:
    app: debezium-connect
  ports:
    - port: 8083
      targetPort: 8083
  type: ClusterIP 